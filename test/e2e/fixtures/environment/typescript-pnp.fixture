/// package.json
{
  "name": "typescript-basic-fixture",
  "version": "1.0.0",
  "main": "dist/index.js",
  "license": "MIT",
  "scripts": {
    "webpack-dev-server": "webpack-dev-server"
  },
  "devDependencies": {
    "fork-ts-checker-webpack-plugin": ${FORK_TS_CHECKER_WEBPACK_PLUGIN_VERSION},
    "pnp-webpack-plugin": "^1.6.4",
    "ts-loader": ${TS_LOADER_VERSION},
    "typescript": ${TYPESCRIPT_VERSION},
    "webpack": ${WEBPACK_VERSION},
    "webpack-cli": ${WEBPACK_CLI_VERSION},
    "webpack-dev-server": ${WEBPACK_DEV_SERVER_VERSION}
  },
  "installConfig": {
    "pnp": true
  }
}

/// tsconfig.json
{
  "compilerOptions": {
    "target": "es5",
    "module": "commonjs",
    "lib": ["ES6", "DOM"],
    "moduleResolution": "node",
    "esModuleInterop": true,
    "skipLibCheck": true,
    "skipDefaultLibCheck": true,
    "strict": true,
    "baseUrl": "./src",
    "outDir": "./dist"
  },
  "include": ["./src"],
  "exclude": ["node_modules"]
}

/// webpack.config.js
const path = require('path');
const PnpWebpackPlugin = require(`pnp-webpack-plugin`);
const ForkTsCheckerWebpackPlugin = require('fork-ts-checker-webpack-plugin');

module.exports = {
  entry: './src/index.ts',
  output: {
    filename: 'index.js',
    path: path.resolve(__dirname, 'dist'),
  },
  module: {
    rules: [
      {
        test: /\.tsx?$/,
        loader: 'ts-loader',
        exclude: /node_modules/,
        options: PnpWebpackPlugin.tsLoaderOptions({
          transpileOnly: true
        })
      },
    ],
  },
  resolve: {
    extensions: ['.tsx', '.ts', '.js'],
    plugins: [
      PnpWebpackPlugin,
    ]
  },
  resolveLoader: {
    plugins: [
      PnpWebpackPlugin.moduleLoader(module),
    ],
  },
  plugins: [
    new ForkTsCheckerWebpackPlugin({
      async: ${ASYNC},
      logger: {
        infrastructure: "console"
      }
    })
  ]
};
